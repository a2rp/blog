import{j as e,d as s}from"./index-BNuopnkt.js";const w="/blog/assets/password-manager-vault-example-CcafAsTW.png",A="/blog/assets/enable-2fa-settings-screenshot-3xN-96mY.png",T="/blog/assets/passkey-prompt-browser-CtQAXaEX.png",i={slug:"account-security-basics",title:"Account Security That Actually Sticks: Password Manager, 2FA, and Passkeys",date:"2025-03-02",tags:["security","privacy","beginners","students"],excerpt:"The three habits that protect most people most of the time: a password manager, app-based 2FA, and passkeys. Here’s exactly how I set them up.",cover:w},l=s.figure`
  margin: 16px 0;
  display: grid;
  gap: 8px;
`,c=s.img`
  width: 100%;
  height: auto;
  border-radius: 12px;
  border: 1px solid rgba(255,255,255,.08);
`,h=s.figcaption`
  font-size: 13px;
  opacity: .8;
`;function M(){return e.jsxs("article",{children:[e.jsx("h1",{children:i.title}),e.jsxs("p",{children:[e.jsx("em",{children:i.date})," • ",i.tags.join(", ")]}),e.jsx("p",{children:"I wrote this for friends and juniors who ask, “What should I actually do to keep my accounts safe?” My answer hasn’t changed in years: use a password manager, turn on two-factor (using an authenticator app), and enable passkeys wherever possible. That’s it. Do these once, and you’re ahead of most people."}),e.jsx("h2",{children:"1) Password manager: one strong master, unique everywhere"}),e.jsx("p",{children:"I use a password manager so I don’t reuse passwords. I set one long master password, then let the app generate and store random passwords for every site."}),e.jsxs(l,{children:[e.jsx(c,{src:w,alt:"Password manager vault showing multiple saved logins with a generate-password button",loading:"lazy"}),e.jsx(h,{children:"My vault: one strong master password, unique logins everywhere else."})]}),e.jsx("h3",{children:"How I set it up (quick)"}),e.jsxs("ol",{children:[e.jsx("li",{children:"Create a long master password (a sentence is great: 5–7 random words)."}),e.jsx("li",{children:"Install the browser extension and mobile app from the provider."}),e.jsx("li",{children:"Turn on the “generate strong password” option by default."}),e.jsx("li",{children:"Import or update your top 10 sites first (email, banking, socials)."})]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Tip:"})," If the manager offers a security report, run it and fix reused/weak passwords first."]}),e.jsx("h2",{children:"2) Two-factor auth (2FA): use an authenticator app, not just SMS"}),e.jsx("p",{children:"SMS codes are better than nothing, but authenticator apps (TOTP) are more reliable. I enable 2FA on email, GitHub, banking, and anything with money or identity tied to it."}),e.jsxs(l,{children:[e.jsx(c,{src:A,alt:"Account settings page showing a toggle to enable two-factor authentication using an authenticator app",loading:"lazy"}),e.jsx(h,{children:"Find “Security” or “Two-Factor Authentication” in account settings and choose “Authenticator App”."})]}),e.jsx("h3",{children:"Enabling it (the way I do it)"}),e.jsxs("ol",{children:[e.jsxs("li",{children:["Go to the account’s ",e.jsx("em",{children:"Security"})," or ",e.jsx("em",{children:"Login"})," settings."]}),e.jsxs("li",{children:["Choose ",e.jsx("strong",{children:"Authenticator App"})," (Google Auth, Microsoft Authenticator, 1Password/Bitwarden built-in, etc.)."]}),e.jsx("li",{children:"Scan the QR in your app and enter the 6-digit code to confirm."}),e.jsx("li",{children:"Download and store the backup codes somewhere safe (I save them in my password manager’s secure notes)."})]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Tip:"})," If a site only offers SMS, I still turn it on as a fallback, but I prefer app-based codes."]}),e.jsx("h2",{children:"3) Passkeys: sign in without passwords"}),e.jsx("p",{children:"Passkeys let me sign in with my device biometrics (fingerprint/Face ID). No password to steal, nothing to remember. I enable them wherever the site supports it."}),e.jsxs(l,{children:[e.jsx(c,{src:T,alt:"Browser dialog asking to create a passkey using fingerprint or face unlock",loading:"lazy"}),e.jsx(h,{children:"When a site offers “Create a passkey,” I say yes. It makes phishing much harder."})]}),e.jsx("h3",{children:"My quick setup flow"}),e.jsxs("ol",{children:[e.jsxs("li",{children:["On supported sites, go to Security → ",e.jsx("strong",{children:"Passkeys"})," → Create."]}),e.jsx("li",{children:"Use device biometrics (fingerprint/Face ID) to confirm."}),e.jsx("li",{children:"If I use multiple devices, I add a second passkey later (phone + laptop)."})]}),e.jsx("h2",{children:"Phishing: the 30-second gut check I use"}),e.jsxs("ul",{children:[e.jsx("li",{children:"If a message creates panic (“your account will be closed”), I don’t click— I open the site manually."}),e.jsx("li",{children:"I hover links on desktop to check the domain (look for extra words or misspellings)."}),e.jsx("li",{children:"Attachments from unknown senders stay unopened. If it’s legit, they can re-send after I confirm."})]}),e.jsx("h2",{children:"Backups that save the day"}),e.jsxs("ul",{children:[e.jsx("li",{children:"I keep my password manager’s recovery options up to date (email, phone)."}),e.jsx("li",{children:"I store 2FA backup codes in the vault (one note per service)."}),e.jsx("li",{children:"I add a secondary email to important accounts so I’m not locked out."})]}),e.jsx("h2",{children:"What I actually did this month"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Rotated two old reused passwords I’d forgotten about."}),e.jsx("li",{children:"Moved three accounts from SMS codes to an authenticator app."}),e.jsx("li",{children:"Added passkeys on two sites that started supporting them."})]}),e.jsx("p",{children:"That’s the whole playbook. Do these once, and you’ll avoid most of the common headaches people deal with after a leak or a suspicious login alert. It’s boring—and it works."})]})}const B=Object.freeze(Object.defineProperty({__proto__:null,default:M,meta:i},Symbol.toStringTag,{value:"Module"})),k="/blog/assets/backup-plan-diagram-C8bochjX.png",D="/blog/assets/external-drive-setup-screenshot-SG9jtUaZ.png",z="/blog/assets/cloud-backup-version-history-KGPHmVlP.png",n={slug:"backup-3-2-1",title:"How I Back Up My Laptop & Phone: The 3–2–1 Rule in Plain English",date:"2025-03-16",tags:["backup","privacy","laptop","phone","students"],excerpt:"My simple 3–2–1 backup plan: one external drive, one cloud, and a monthly restore test. Set it once and forget it.",cover:k},d=s.figure`
  margin: 16px 0;
  display: grid;
  gap: 8px;
`,p=s.img`
  width: 100%;
  height: auto;
  border-radius: 12px;
  border: 1px solid rgba(255,255,255,.08);
`,u=s.figcaption`
  font-size: 13px;
  opacity: .8;
`;function F(){return e.jsxs("article",{children:[e.jsx("h1",{children:n.title}),e.jsxs("p",{children:[e.jsx("em",{children:n.date})," • ",n.tags.join(", ")]}),e.jsxs("p",{children:["I don’t wait for a crash. I keep a boring backup routine that survived a dead SSD and one stolen phone. It follows the 3–2–1 rule: ",e.jsx("strong",{children:"3 copies"})," of my data, on ",e.jsx("strong",{children:"2 different kinds of storage"}),", with ",e.jsx("strong",{children:"1 copy off-site"}),"."]}),e.jsxs(d,{children:[e.jsx(p,{src:k,alt:"Diagram showing 3–2–1: laptop → external drive + cloud (off-site)",loading:"lazy"}),e.jsx(u,{children:"One local copy, one external drive, one cloud. That’s it."})]}),e.jsx("h2",{children:"My laptop setup (10–15 minutes)"}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"External drive:"})," I plug in a portable SSD and set an automatic daily backup. On macOS that’s Time Machine; on Windows I use File History or an imaging tool. I exclude bulky caches and node_modules."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Folders I care about:"})," code, docs, photos, finance, exports. Downloads get cleaned weekly; I don’t back up junk."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Encryption:"})," I keep the drive encrypted (BitLocker/FileVault compatible)."]})]}),e.jsxs(d,{children:[e.jsx(p,{src:D,alt:"External drive backup settings scheduled for daily incremental backups",loading:"lazy"}),e.jsx(u,{children:"Daily incremental backups to an encrypted portable SSD."})]}),e.jsx("h2",{children:"Cloud backup (off-site)"}),e.jsx("p",{children:"The cloud copy protects me from theft, fire, or losing the drive. I pick a provider with version history and set bandwidth limits so it doesn’t hog my internet."}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"What I sync:"})," Home folders and photos. Large archives live locally only."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Versioning:"})," I keep ~30–90 days of file versions for “oops I overwrote it.”"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Privacy:"})," I enable end-to-end encryption if the provider supports it."]})]}),e.jsxs(d,{children:[e.jsx(p,{src:z,alt:"Cloud backup app showing file version history and restore options",loading:"lazy"}),e.jsx(u,{children:"Version history has saved me more times than full disk clones."})]}),e.jsx("h2",{children:"Phone backup (photos + chats)"}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"Photos:"})," automatic cloud backup with original quality for the albums I care about."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Chats:"})," app-native backups on a schedule (and I verify encryption where offered)."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"SIM swap sanity:"})," I note my recovery emails and 2FA method in my password manager."]})]}),e.jsx("h2",{children:"Monthly restore test (5 minutes)"}),e.jsx("p",{children:"Backups are only real if I can restore. Once a month I restore a single folder from the external drive and one file from the cloud. If either fails, I fix it immediately."}),e.jsx("h2",{children:"Costs & time"}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"External SSD:"})," one-time purchase."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Cloud:"})," a few GBs are free; plans are cheap for students."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Time:"})," setup once, then I spend ~5 minutes a month checking a restore."]})]}),e.jsx("h2",{children:"Quick checklist (copy/paste)"}),e.jsxs("ol",{children:[e.jsx("li",{children:"Plug in an external SSD → enable daily backups → encrypt the drive."}),e.jsx("li",{children:"Turn on cloud backup with version history; limit bandwidth."}),e.jsx("li",{children:"Enable automatic photo & chat backups on the phone."}),e.jsx("li",{children:"Do a tiny restore test every month."})]}),e.jsx("p",{children:"That’s the whole plan. It’s not fancy, and that’s why it works. When something dies, I plug in the drive, pull a file from the cloud, and keep moving."})]})}const L=Object.freeze(Object.defineProperty({__proto__:null,default:F,meta:n},Symbol.toStringTag,{value:"Module"})),I="/blog/assets/speedtest-near-router-B8arZAvW.png",W="/blog/assets/router-placement-diagram-DEPNIadH.png",C="/blog/assets/channel-interference-chart-DDubkE6S.png",r={slug:"fix-slow-home-wifi",title:"Fixing Slow Home Wi-Fi: What I Actually Do (10–30 min checklist)",date:"2025-03-09",tags:["networking","wifi","home-tech","how-to"],excerpt:"When my internet feels slow, I run the same quick routine: verify the line, test near the router, pick the right band/channel, move the box, and set a few sane router options.",cover:I},x=s.figure`
  margin: 16px 0;
  display: grid;
  gap: 8px;
`,g=s.img`
  width: 100%;
  height: auto;
  border-radius: 12px;
  border: 1px solid rgba(255,255,255,.08);
`,m=s.figcaption`
  font-size: 13px;
  opacity: .8;
`;function G(){return e.jsxs("article",{children:[e.jsx("h1",{children:r.title}),e.jsxs("p",{children:[e.jsx("em",{children:r.date})," • ",r.tags.join(", ")]}),e.jsx("p",{children:"If your video buffers or downloads crawl, try this before calling the ISP. This is my real checklist—short, boring, and it usually fixes it."}),e.jsx("h2",{children:"1) Verify the line, not the Wi-Fi"}),e.jsxs("ul",{children:[e.jsxs("li",{children:["Run a speed test ",e.jsx("strong",{children:"on your phone next to the router"})," and again in the slow room."]}),e.jsxs("li",{children:["If you can, plug a laptop into the router with ",e.jsx("strong",{children:"Ethernet"})," and test once more."]}),e.jsx("li",{children:"If Ethernet is fast but Wi-Fi is slow → it’s a wireless issue, not the ISP line."})]}),e.jsxs(x,{children:[e.jsx(g,{src:I,alt:"Speed test result taken close to the router",loading:"lazy"}),e.jsx(m,{children:"Baseline near the router. If this is fine, the line is fine."})]}),e.jsx("h2",{children:"2) Use the right band"}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"2.4 GHz"})," goes farther, slower. Good for old/IoT devices."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"5 GHz"})," (or 6 GHz if you have Wi-Fi 6E/7) is faster but hates walls. Use it for phones/laptops."]}),e.jsxs("li",{children:["Give the bands different names like ",e.jsx("code",{children:"Home-2G"})," and ",e.jsx("code",{children:"Home-5G"})," so devices don’t pick the wrong one."]})]}),e.jsx("h2",{children:"3) Move the box (yes, really)"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Center of the home, shoulder height, away from thick walls and metal."}),e.jsx("li",{children:"Don’t hide it in a cupboard. Height helps more than people expect."})]}),e.jsxs(x,{children:[e.jsx(g,{src:W,alt:"Diagram of good router placement in a home",loading:"lazy"}),e.jsx(m,{children:"Middle of the house beats “next to the TV cabinet” every time."})]}),e.jsx("h2",{children:"4) Pick a cleaner channel"}),e.jsx("p",{children:"In apartments, everyone shares the same air. I scan channels and switch to the least crowded one."}),e.jsxs("ul",{children:[e.jsxs("li",{children:["2.4 GHz → use channels ",e.jsx("strong",{children:"1, 6, or 11"})," only."]}),e.jsx("li",{children:"5 GHz → try 40/80 MHz width; auto is fine but avoid DFS if your router drops when radar is detected."})]}),e.jsxs(x,{children:[e.jsx(g,{src:C,alt:"Chart showing overlapping Wi-Fi channels and interference",loading:"lazy"}),e.jsx(m,{children:"Overlapping channels = drops. 1/6/11 on 2.4 GHz keeps things sane."})]}),e.jsx("h2",{children:"5) Router settings I actually change"}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"Update firmware"})," (often fixes stability)."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Disable WPS"}),"; keep WPA2/WPA3. Set a strong Wi-Fi password."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Reboot"})," once after changes; it clears stuck radios."]}),e.jsxs("li",{children:["Optional: Set ",e.jsx("strong",{children:"DNS"})," to your preference (ISP, Cloudflare 1.1.1.1, or Google 8.8.8.8)."]})]}),e.jsx("h2",{children:"6) Extender vs mesh"}),e.jsxs("p",{children:["Extenders can halve your speed. If you have many dead spots, a ",e.jsx("strong",{children:"mesh"})," kit (2–3 nodes over Ethernet backhaul if possible) is a better long-term fix."]}),e.jsx("h2",{children:"7) When I call the ISP"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Ethernet test is slow too."}),e.jsx("li",{children:"Downstream/upstream light keeps dropping or modem logs show frequent reconnects."}),e.jsx("li",{children:"Neighbors on the same provider report issues at the same time."})]}),e.jsx("h2",{children:"10-minute quick version"}),e.jsxs("ol",{children:[e.jsx("li",{children:"Speed test near router → far room."}),e.jsx("li",{children:"Use 5 GHz for phones/laptops, 2.4 GHz for IoT."}),e.jsx("li",{children:"Move router higher/central; update firmware."}),e.jsx("li",{children:"Pick 1/6/11 on 2.4 GHz; try different channel on 5 GHz."})]}),e.jsx("p",{children:"Most “slow internet” complaints I get are Wi-Fi positioning or band/channel choices. Do the basics once and it stays fast."})]})}const N=Object.freeze(Object.defineProperty({__proto__:null,default:G,meta:r},Symbol.toStringTag,{value:"Module"})),v="/blog/assets/cover-CJLkUvxh.png",H="/blog/assets/lighthouse-D_IrpWYq.png",E="/blog/assets/og-preview-2uB10Ukp.png",o={slug:"frontend-pre-deploy-checklist",title:"My Frontend Pre-Deploy Checklist (and where AI actually helps)",date:"2025-02-16",tags:["frontend","react","seo","accessibility","ai"],excerpt:"Before I ship a React site, I run the same short checklist: build, links, meta, images, a11y, and basic perf. Here’s exactly what I do and the tiny AI assists I trust.",cover:v},j=s.figure`
  margin: 16px 0;
  display: grid;
  gap: 8px;
`,f=s.img`
  width: 100%;
  height: auto;
  border-radius: 12px;
  border: 1px solid rgba(255,255,255,.08);
`,y=s.figcaption`
  font-size: 13px;
  opacity: .8;
`;function O(){return e.jsxs("article",{children:[e.jsx("h1",{children:o.title}),e.jsxs("p",{children:[e.jsx("em",{children:o.date})," • ",o.tags.join(", ")]}),e.jsx("p",{children:'I don’t push a React site live without doing these checks. It takes me ~15-20 minutes and saves me from obvious "why is the preview broken on WhatsApp?" or "why is the CSS missing on GitHub Pages?" messages. I also use AI in a few tiny places—never blindly.'}),e.jsxs(j,{children:[e.jsx(f,{src:v,alt:"Laptop with a short deployment checklist on a sticky note",loading:"lazy"}),e.jsx(y,{children:"The goal is boring deploys. This checklist keeps them boring."})]}),e.jsx("h2",{children:"1) Production build & preview"}),e.jsx("pre",{children:"npm run build && npm run preview  # always test the prod build locally"}),e.jsxs("ul",{children:[e.jsxs("li",{children:["I click through the main routes, including deep links like ",e.jsx("code",{children:"/post/some-slug"}),"."]}),e.jsx("li",{children:"I watch the console for missing asset paths or CORS errors."})]}),e.jsx("h3",{children:"Where AI helps"}),e.jsxs("p",{children:['If I see a vague error ("Cannot read properties of undefined"), I paste a',e.jsx("em",{children:"minimal"})," snippet and ask for likely causes. I ignore any fix that rewrites half my app. Small hints only."]}),e.jsx("h2",{children:"2) Base path & router sanity (GH Pages / subfolders)"}),e.jsx("pre",{children:`// vite.config.js
export default defineConfig({
  base: "/blog/", // if deploying to a subpath
});`}),e.jsx("pre",{children:`// main.jsx
<BrowserRouter basename={import.meta.env.BASE_URL}>
  <App />
</BrowserRouter>`}),e.jsxs("p",{children:["I’ve broken this enough times to respect it. I don’t hardcode ",e.jsx("code",{children:"/blog"})," in routes."]}),e.jsx("h2",{children:"3) Links, 404s, and simple crawl"}),e.jsx("p",{children:"I run a quick broken-link check against the local preview:"}),e.jsx("pre",{children:`// scripts/check-links.mjs (very small)
import fetch from "node-fetch";
const routes = ["/", "/about", "/contact"]; // add more
const base = "http://localhost:4173";
for (const r of routes) {
  const res = await fetch(base + r);
  console.log(r, res.status);
}`}),e.jsxs("p",{children:["It’s basic, but it catches fat-fingered paths. I also copy",e.jsx("code",{children:"index.html"})," to ",e.jsx("code",{children:"public/404.html"})," for SPA fallback."]}),e.jsx("h2",{children:"4) Meta tags, Open Graph, and share previews"}),e.jsx("pre",{children:`<meta name="description" content="Short, human summary under 160 chars" />
<meta property="og:title" content="Site Title" />
<meta property="og:description" content="Same short summary" />
<meta property="og:image" content="/cover-1200x630.jpg" />
<meta name="twitter:card" content="summary_large_image" />`}),e.jsxs("p",{children:["I keep one default OG image in ",e.jsx("code",{children:"public/"})," and add per-post overrides for blog pages."]}),e.jsxs(j,{children:[e.jsx(f,{src:E,alt:"Social preview image showing title and banner",loading:"lazy"}),e.jsx(y,{children:"On day one, a clean OG image is higher ROI than a fancy animation."})]}),e.jsx("h3",{children:"Where AI helps"}),e.jsx("p",{children:"I ask for 2-3 alternative meta descriptions from my own draft and pick the cleanest one. I never let it invent facts."}),e.jsx("h2",{children:"5) Images: size, lazy, alt text"}),e.jsxs("ul",{children:[e.jsx("li",{children:"I avoid shipping 2000px images in 300px cards."}),e.jsxs("li",{children:["I add ",e.jsx("code",{children:'loading="lazy"'})," below the fold."]}),e.jsxs("li",{children:["I write ",e.jsx("em",{children:"short, literal"}),' alt text. If I use AI, I keep it to a prompt like "write a 6-10 word literal alt text."']})]}),e.jsx("pre",{children:`<img
  src="/covers/hero-640.webp"
  srcSet="/covers/hero-640.webp 640w, /covers/hero-960.webp 960w"
  sizes="(max-width: 768px) 100vw, 640px"
  loading="lazy"
  alt="Product dashboard with charts"
/>`}),e.jsx("h2",{children:"6) Accessibility quick pass"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Tab through the page; check focus, skip links, visible outlines."}),e.jsx("li",{children:"Check color contrast on a couple of key components."}),e.jsx("li",{children:"Ensure buttons are buttons (not divs), links are links."})]}),e.jsx("p",{children:"I don’t rely on AI here—small screens and keyboard feel tell me more than a score."}),e.jsx("h2",{children:"7) Lighthouse basics (not chasing 100)"}),e.jsx("p",{children:'I run one Lighthouse report, fix the obvious (render-blocking fonts, unused huge images), and stop when it’s "good enough" for my use case.'}),e.jsxs(j,{children:[e.jsx(f,{src:H,alt:"Lighthouse report screenshot with decent scores",loading:"lazy"}),e.jsx(y,{children:"Good enough beats perfect. I fix the big reds, not every nit."})]}),e.jsx("h2",{children:"8) Environment variables and secrets"}),e.jsxs("ul",{children:[e.jsxs("li",{children:["Confirm public keys are in ",e.jsx("code",{children:"VITE_*"})," and safe to expose."]}),e.jsx("li",{children:"Ensure I didn’t log secrets in the console during dev."})]}),e.jsx("h2",{children:"9) Analytics & privacy basics"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Pageview fires once per route change (SPAs need manual hooks)."}),e.jsx("li",{children:'Respect "Do Not Track" if that’s a policy; cookie banner is not a license to collect everything.'})]}),e.jsx("h2",{children:"10) Version bump, changelog, deploy"}),e.jsx("pre",{children:`npm version patch -m "chore: release %s"
git push && npm run deploy`}),e.jsx("h2",{children:"Where AI didn’t help (for me)"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Auto-fix PRs that touch multiple concerns. It looked smart, broke edge cases."}),e.jsx("li",{children:'"Write all the tests" prompts—too generic. I do one happy path myself, then ask for variations.'})]}),e.jsx("p",{children:"That’s it. Boring steps, fewer surprises. If I had to pick just three: production preview, OG image/description, and a quick Lighthouse pass. The rest is muscle memory."})]})}const q=Object.freeze(Object.defineProperty({__proto__:null,default:O,meta:o},Symbol.toStringTag,{value:"Module"})),a={slug:"kickoff-tech-blog-2025",title:"My 2025 Tech Blog Plan — What I’ll Write, How I’ll Ship, and Why",date:"2025-01-05",tags:["blogging","react","productivity","career"],excerpt:"Weekly tech posts in 2025: my stack (React + Vite + GH Pages), workflow, and the promise I’m making to myself.",cover:"https://images.unsplash.com/photo-1455390582262-044cdead277a?w=1200"};function R(){return e.jsxs("article",{children:[e.jsx("h1",{children:a.title}),e.jsxs("p",{children:[e.jsx("em",{children:a.date})," • ",a.tags.join(", ")]}),e.jsx("p",{children:"I’ve decided to publish one post every week in 2025. Short, practical, and honest—stuff I actually use while building products in React/MERN. This post is the kickoff: what I’ll write about, the stack I’m using, and my workflow so I don’t miss a week."}),e.jsx("h2",{children:"Why weekly?"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Writing clarifies thinking and improves code quality."}),e.jsx("li",{children:"Public notes help future-me (and maybe help you too)."}),e.jsx("li",{children:"Consistency beats perfection—ship small, ship often."})]}),e.jsx("h2",{children:"Publishing stack (simple & free)"}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("b",{children:"React + Vite + styled-components"})," — file-based posts (each post is a component + ",e.jsx("code",{children:"meta"}),")."]}),e.jsxs("li",{children:[e.jsx("b",{children:"GitHub Pages"})," — deploy from ",e.jsx("code",{children:"gh-pages"})," branch."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Zero CMS"})," — fewer moving parts, easy to review in PRs."]})]}),e.jsx("h3",{children:"Post component template I’ll reuse"}),e.jsx("pre",{children:`export const meta = {
  slug: "my-slug",
  title: "Readable Title",
  date: "2025-01-12",
  tags: ["react", "pattern"],
  excerpt: "One-liner describing the value.",
  cover: "https://images.unsplash.com/...",
};

export default function Post() {
  return (
    <article>
      <h1>{meta.title}</h1>
      <p><em>{meta.date}</em> • {meta.tags.join(", ")}</p>
      <p>Intro…</p>
      <h2>Section</h2>
      <pre>{\`// code goes here\`}</pre>
      <p>Wrap-up & CTA.</p>
    </article>
  );
}`}),e.jsx("h2",{children:"Editorial rules I’ll follow"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Write in a conversational “I/we” voice. No fluff."}),e.jsx("li",{children:"Lead with the outcome; add context; then code."}),e.jsx("li",{children:"Keep posts ~800–1200 words. Code is the hero."}),e.jsx("li",{children:"One diagram or screenshot if it saves 200 words."})]}),e.jsx("h2",{children:"Themes for Q1 2025"}),e.jsxs("ul",{children:[e.jsx("li",{children:"React patterns I actually use (forms, state, performance)."}),e.jsx("li",{children:"MERN bits: auth, payments, file uploads, queues."}),e.jsx("li",{children:"Tooling that saves time: Vite, ESLint, PNPM, GitHub Actions."}),e.jsx("li",{children:"Career/portfolio notes: shipping fast, writing good READMEs."})]}),e.jsx("h2",{children:"My writing workflow (90-minute sprint)"}),e.jsxs("ol",{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Idea → outline (10m):"})," 3–5 bullet outcomes."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Draft (50m):"})," code first, text second."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Edit (20m):"})," cut 20%, add headings, check links."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Ship (10m):"})," commit message = post title, deploy."]})]}),e.jsx("p",{children:"That’s it. If you’re reading this and want a specific topic covered, ping me—DMs open. Next week we dive into a hands-on technical post."})]})}const U=Object.freeze(Object.defineProperty({__proto__:null,default:R,meta:a},Symbol.toStringTag,{value:"Module"})),V=b=>{const t=new Date(b);if(Number.isNaN(t.getTime()))return b;const S=t.toLocaleString("en-US",{month:"short"}).toUpperCase(),P=t.getDate(),_=t.getFullYear();return`${S} ${P}, ${_}`};export{U as _,q as a,N as b,L as c,B as d,V as f};
